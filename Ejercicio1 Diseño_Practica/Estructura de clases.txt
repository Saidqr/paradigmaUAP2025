/*
El restaurante “San Martín” nos contrata para hacer un software que controle los costos de 
sus platos. Los platos están compuestos por ingredientes los cuales pueden ser platos o 
ingredientes básicos. Por ejemplo los panqueques con dulce de leche, está compuesto por 
panqueques (que es un plato) y dulce de leche que es un ingrediente básico. El software 
debe mantener el costo de cada uno de los platos, y el costo está dado por la suma de los 
costos de los ingredientes (básicos o platos).
*/

//correcion

//usar interfaz
interfaz IValorable{
  double setPrecio();
  string getNombre();
}


class Plato:implements IValorable {
  nombre
  Valorable[] ingredientes
  double setPrecio()
}

class Ingrediente:implements IValorable {
  nombre
  precio

  double setPrecio()
}

//Si dijera que hay que listar los platos
//Seria una clase general, casi siempre hay que poner una clase general
class Menu{
  Plato[]:platos
}


/* EJERCICIO 2
La bicicletería Oro Verde lo contrata para diseñar y desarrollar su sistema de control 
de precios. Dado que la bicicletería tiene un servicio de armado de bicicletas, donde 
permite que dado un conjunto de partes armar una bicicleta personalizada, cuyo precio 
es la suma del precio de las partes. A la vez, la bicicletería vende partes, las cuales 
tienen un número, una descripción y un precio. Las bicicletas armadas tienen un número y 
una descripción y el precio está dado por la suma de las partes.

Por último, la bicicletería tiene ofertas las cuales son un conjunto de partes y/o 
bicicletas y su precio está dado por la suma de los elementos que lo componen, menos un 20%.
*/

class BicicletaArmada: implements Producto {
  string numero; //número que idenfica la serie
  string descripcion;
  Parte[] partes;
  
  double getPrecio() {
    double total = 0;
    for (Parte parte : partes) {
      total += parte.precio;
    }
    return total;
  }
}

class Parte:implements Producto {
  double precio;
}

class Producto{
  string nombre;
  double descuento;
  double getPrecio()
}

class Oferta{
  Producto[] productos;
  double getPrecio() {
    double total = 0;
    for (Producto producto : productos) {
      total += producto.getPrecio();
    }
    return total * 0.8; // Aplicar un 20% de descuento
  }
}


//si dijera listar las bicicletas armadas

class Bicicleteria{
  Producto[] productos;
  Oferta[] ofertas;
}

/* EJERCICIO 3
La empresa Tarjeta Violeta lo contrata para hacer un sistema que mantenga los datos de sus 
clientes, los clientes pueden ser beneficiarios de la tarjeta, los cuales pueden gastar un 
monto de dinero por mes, que luego pueden abonar en cuotas. O afiliados, son los negocios 
en donde el beneficiario realiza una compra y se le debe poder abonar el monto gastado.

Los datos de los beneficiarios son: cuit, nombre, apellido, dirección y número de cuenta 
donde se debitarán las cuotas.

Los datos de los afiliados son: cuit, nombre, apellido, dirección y número de cuenta 
donde se depositará por mes, lo gastado por los beneficiarios.

Diseñe un software que permita listar los clientes cargados. Tenga en cuenta que un 
cliente puede ser beneficiario y afiliado a la vez.
*/

interfaz RolCliente {
  void transferirDinero(double monto);
}


class Cliente{
  string cuit;
  string nombre;
  string apellido;
  string direccion;
  Irol [] roles;
}

class Beneficiario: implements RolCliente {
  string cuenta
}

class Afiliado: implements RolCliente {
  string cuenta
}

class Empresa{
  Clientep[] clientes;
  void listarClientes() {
    for (Cliente cliente : clientes) {
      cliente.mostrarDatos();
    }
  }

  void TransferirDinero(Cliente cliente, double monto) {
    for (RolCliente rol : cliente.roles) {
      rol.transferirDinero(monto);
    }
  }
}


/* EJERCICIO 4
La embajada de Italia lo contrata para que diseñe un software que permita saber si una 
persona es apta para recibir la ciudadanía Italiana. Para dicho proceso se cargan los 
datos de la persona (dni, nombre, apellido y nacionalidad) y los datos de su padre, 
madre, abuelo, bisabuelo y antepasados que también son personas por lo tanto los datos 
son los mismos (dni, nombre, apellido y nacionalidad).

El objetivo es cargar el árbol genealógico de la persona de tal manera de poder analizar 
si es válido darle la nacionalidad. Los datos del árbol genealógico se cargan hasta 
encontrarnos con un desconocido, en este caso se detiene la carga de esa rama del árbol.

Una persona es considerada para el proceso de nacionalidad Italiana, si es Italiana o si 
al menos el número de sus antepasados Italianos son igual al nivel de antepasados . 
Por ejemplo si su padre o madre o ambos son italianos (dado que el nivel es 1) o si tiene 
2 o más abuelos italianos o 3 o más bisabuelos, etc.

Realice un diseño que permita resolver dicho problema y permita saber si una persona es 
apta para el proceso de ciudadanía.
*/

//Tarea